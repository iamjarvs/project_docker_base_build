name: Automated Docker Base Image Build

on:
  # Run on the 1st day of every month at 2:00 AM UTC
  schedule:
    - cron: '0 2 1 * *'
  
  # Also build on main branch changes to key files
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/docker-build.yml'
      - 'scripts/**'
      - 'tests/**'
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Need full history for tag creation
          token: ${{ secrets.GH_PAT }}
      
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
      
      - name: Generate version tag
        id: generate_tag
        run: |
          # Get current year and month (2-digit year)
          YEAR=$(date +'%y')
          MONTH=$(date +'%-m')  # %-m removes leading zero
          
          # Base tag format YY.M
          BASE_TAG="${YEAR}.${MONTH}"
          
          # Find the highest existing subversion for current YY.M
          HIGHEST_SUBVERSION="-1"  # Start at -1 so first will be 0
          
          for tag in $(git tag -l "${BASE_TAG}.*"); do
            SUBVERSION=$(echo $tag | awk -F '.' '{print $3}')
            if [[ $SUBVERSION =~ ^[0-9]+$ ]] && [[ $SUBVERSION -gt $HIGHEST_SUBVERSION ]]; then
              HIGHEST_SUBVERSION=$SUBVERSION
            fi
          done
          
          # Increment the highest subversion
          NEXT_SUBVERSION=$((HIGHEST_SUBVERSION + 1))
          
          # Create the full tag
          TAG="${BASE_TAG}.${NEXT_SUBVERSION}"
          
          echo "Generated tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/base-dev-image:latest
            ${{ vars.DOCKERHUB_USERNAME }}/base-dev-image:${{ steps.generate_tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          # Uncomment for multi-platform support if needed
          # platforms: linux/amd64,linux/arm64
      
      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ vars.DOCKERHUB_USERNAME }}/base-dev-image:${{ steps.generate_tag.outputs.tag }}
          format: 'table'
          exit-code: '0'  # Don't fail the build, just report
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
      
      - name: Run verification tests
        run: |
          chmod +x ./tests/verify-tools.sh
          ./tests/verify-tools.sh ${{ vars.DOCKERHUB_USERNAME }}/base-dev-image:${{ steps.generate_tag.outputs.tag }}
        # Add specific error handling if needed
        
      - name: Create and push Git tag
        run: |
          TAG="${{ steps.generate_tag.outputs.tag }}"
          
          # Create an annotated tag with commit information
          COMMIT_MSG=$(git log -1 --pretty=%B)
          TRIGGER_TYPE="Automated build"
          
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            TRIGGER_TYPE="Monthly scheduled build"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TRIGGER_TYPE="Manual build"
          else
            TRIGGER_TYPE="Auto build from commit"
          fi
          
          git tag -a "$TAG" -m "Release $TAG - $TRIGGER_TYPE"
          
          # Use GITHUB_TOKEN for authentication
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git
          
          # Push using the built-in token
          git push origin "$TAG"
          
          echo "Created and pushed tag: $TAG"
      
      - name: Update README with latest version
        run: |
          # Update README.md with the latest version information
          sed -i "s/Latest version: .*/Latest version: ${{ steps.generate_tag.outputs.tag }}/" README.md || true
          
          # Check if there are changes to commit
          if git diff --quiet README.md; then
            echo "No README changes"
          else
            git add README.md
            git commit -m "Update README with latest version: ${{ steps.generate_tag.outputs.tag }}"
            git push
          fi
        continue-on-error: true
        
      - name: Notify on completion
        if: always()
        run: |
          STATUS="${{ job.status }}"
          TAG="${{ steps.generate_tag.outputs.tag }}"
          
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "Build and push completed successfully for version $TAG"
            # Add notification logic here if desired (Slack, Teams, etc.)
          else
            echo "Build failed for version $TAG"
            # Add failure notification logic here if desired
          fi
